<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>comstar</title>
    <% if (htmlWebpackPlugin.options.nodeModules) { %>
    <!-- Add `node_modules/` to global.sass paths so `require` works properly in development -->
    <script>
        require('module').globalPaths.push('<%= htmlWebpackPlugin.options.nodeModules.replace(/\\/g, '\\\\') %>')
    </script>
    <% } %>
</head>
<body>
<div id="title-bar">
    <div id="title">comstar</div>
    <div id="title-bar-btns">
        <button id="min-btn"><i class="fa fa-window-minimize" aria-hidden="true"></i></button>
        <button id="max-btn"><i class="fa fa-window-maximize" aria-hidden="true"></i></button>
        <button id="close-btn" style="font-size: 17px; margin-right: 5px;"><i class="fa fa-times" aria-hidden="true"></i></button>
    </div>
</div>
<div id="app"></div>
<!-- Set `__static` path to static files in production -->
<script>
    if (process.env.NODE_ENV !== 'development') window.__static = require('path').join(__dirname, '/static').replace(/\\/g, '\\\\')
</script>

<!-- webpack builds are automatically injected -->
</body>
<script>
    (function () {

        const remote = require('electron').remote;

        function init() {
            document.getElementById("min-btn").addEventListener("click", function (e) {
                const window = remote.getCurrentWindow();
                window.minimize();
            });

            document.getElementById("max-btn").addEventListener("click", function (e) {
                const window = remote.getCurrentWindow();
                if (!window.isMaximized()) {
                    window.maximize();
                } else {
                    window.unmaximize();
                }
            });

            document.getElementById("close-btn").addEventListener("click", function (e) {
                const window = remote.getCurrentWindow();
                window.close();
            });
        };

        document.onreadystatechange = function () {
            if (document.readyState == "complete") {
                init();
            }
        };

    })();
</script>
<style>
    html {
        margin: 0px;
        padding: 0px;
    }
    body {
        padding: 0px;
        margin: 0px;
        background-color: white;
        border: 1px solid #68217A;
        /*border-bottom: 24px solid  #68217A;*/
        position: absolute;
        top: 0px;
        left: 0px;
        right: 0px;
        bottom: 0px;
        overflow: hidden;
    }

    #title-bar {
        -webkit-app-region: drag;
        height: 32px;
        padding: 0px;
        margin: 0px;
        color: #ADADAD;
        background-color: #2D2D30;
        font-family: sans-serif;
    }

    #title {
        position: fixed;
        top: 0px;
        left: 12px;
        line-height: 32px;
        font-size: 14px;
        font-family: inherit;
    }

    #title-bar-btns {
        -webkit-app-region: no-drag;
        position: fixed;
        top: 1px;
        right: 0px;
    }

    #title-bar-btns button {
        height: 31px;
        width: 32px;
        background-color: transparent;
        border: none;
        color: #F1F1F1;
        font-size: 12px;
    }

    #title-bar-btns button:hover {
        background-color: #3F3F41;
    }
    #content {
        padding: 12px;
        color: #CCCCCC;
    }

    a {
        color: #68217A;
    }
</style>
</html>
